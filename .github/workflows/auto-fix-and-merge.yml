name: Auto-Fix and Merge System

on:
  pull_request:
    types: [opened, synchronize]
  workflow_run:
    workflows: ["Gemini Code Review Gatekeeper"]
    types: [completed]

jobs:
  auto-fix-and-merge:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'failure' || github.event_name == 'pull_request'
    
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref || github.event.workflow_run.head_branch }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Check Review Status
        id: review_status
        run: |
          if [ -f "scripts/gemini-review/gemini-feedback.json" ]; then
            ASSESSMENT=$(jq -r '.review.assessment // "PENDING"' scripts/gemini-review/gemini-feedback.json)
            echo "assessment=$ASSESSMENT" >> $GITHUB_OUTPUT
            echo "üìä Current assessment: $ASSESSMENT"
          else
            echo "assessment=PENDING" >> $GITHUB_OUTPUT
            echo "üìä No review feedback found yet"
          fi
          
      - name: Auto-Fix Issues
        if: steps.review_status.outputs.assessment == 'NEEDS_WORK' || steps.review_status.outputs.assessment == 'REJECT'
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "üîß Auto-fixing issues found by Gemini..."
          node scripts/auto-fix-system.js
          
      - name: Commit Auto-Fixes
        if: steps.review_status.outputs.assessment == 'NEEDS_WORK' || steps.review_status.outputs.assessment == 'REJECT'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "Auto-Fix Bot"
          
          if [ -n "$(git status --porcelain)" ]; then
            git add .
            git commit -m "ü§ñ Auto-fix: Resolve Gemini review issues

            - Applied automated fixes based on Gemini feedback
            - Addressed code quality and security concerns
            - Updated documentation and error handling
            
            Auto-generated by Claude Code Auto-Fix System"
            
            git push origin HEAD
            echo "‚úÖ Auto-fixes committed and pushed"
          else
            echo "‚ÑπÔ∏è No changes needed"
          fi
          
      - name: Re-run Review After Fixes
        if: steps.review_status.outputs.assessment == 'NEEDS_WORK' || steps.review_status.outputs.assessment == 'REJECT'
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          echo "üîÑ Re-running Gemini review after auto-fixes..."
          node scripts/gemini-review/gemini-local.js
          
      - name: Check Final Status
        id: final_status
        run: |
          if [ -f "scripts/gemini-review/gemini-feedback.json" ]; then
            FINAL_ASSESSMENT=$(jq -r '.review.assessment // "PENDING"' scripts/gemini-review/gemini-feedback.json)
            echo "final_assessment=$FINAL_ASSESSMENT" >> $GITHUB_OUTPUT
            echo "üìä Final assessment after fixes: $FINAL_ASSESSMENT"
          else
            echo "final_assessment=PENDING" >> $GITHUB_OUTPUT
          fi
          
      - name: Auto-Merge on Success
        if: steps.final_status.outputs.final_assessment == 'APPROVE' || steps.review_status.outputs.assessment == 'APPROVE'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "‚úÖ Code approved by Gemini - auto-merging..."
          
          # Get PR number
          PR_NUMBER="${{ github.event.pull_request.number || github.event.workflow_run.pull_requests[0].number }}"
          
          if [ -n "$PR_NUMBER" ]; then
            # Auto-merge the PR
            curl -X PUT \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/merge" \
              -d '{
                "commit_title": "ü§ñ Auto-merge: Gemini-approved changes",
                "commit_message": "All code quality checks passed. Auto-merged by Gemini AI review system.",
                "merge_method": "squash"
              }'
            
            echo "üéâ PR #$PR_NUMBER auto-merged successfully!"
            
            # Post success comment
            curl -X POST \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments" \
              -d '{
                "body": "ü§ñ **Auto-Merge Complete!**\n\n‚úÖ **Gemini AI Review:** APPROVED\n‚úÖ **Auto-Fixes Applied:** Yes\n‚úÖ **Merge Status:** Successfully merged\n\n*This PR was automatically reviewed, fixed, and merged by the Claude Code automation system.*"
              }'
          else
            echo "‚ö†Ô∏è Could not determine PR number for auto-merge"
          fi
          
      - name: Report Failure
        if: steps.final_status.outputs.final_assessment == 'REJECT' && steps.review_status.outputs.assessment != 'APPROVE'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "‚ùå Auto-fix failed - critical issues remain"
          
          PR_NUMBER="${{ github.event.pull_request.number || github.event.workflow_run.pull_requests[0].number }}"
          
          if [ -n "$PR_NUMBER" ]; then
            # Post failure comment
            curl -X POST \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments" \
              -d '{
                "body": "üö® **Auto-Fix Failed**\n\n‚ùå **Gemini AI Review:** REJECTED\n‚ùå **Auto-Fixes:** Unable to resolve critical issues\n‚ö†Ô∏è **Action Required:** Manual intervention needed\n\n*Please review the Gemini feedback and address the critical issues manually.*"
              }'
          fi
          
          exit 1